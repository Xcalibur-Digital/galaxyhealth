{
  "version": 3,
  "sources": ["../../../../../node_modules/@ag-grid-enterprise/menu/dist/esm/es6/menu/enterpriseMenu.mjs", "../../../../../node_modules/@ag-grid-enterprise/menu/dist/esm/es6/menu/contextMenu.mjs", "../../../../../node_modules/@ag-grid-enterprise/menu/dist/esm/es6/menu/menuItemMapper.mjs", "../../../../../node_modules/@ag-grid-enterprise/menu/dist/esm/es6/version.mjs", "../../../../../node_modules/@ag-grid-enterprise/menu/dist/esm/es6/menu/chartMenuItemMapper.mjs", "../../../../../node_modules/@ag-grid-enterprise/menu/dist/esm/es6/menuModule.mjs"],
  "sourcesContent": ["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, BeanStub, ModuleNames, ModuleRegistry, PostConstruct, AgPromise, TabbedLayout, AgMenuList, AgMenuItemComponent } from '@ag-grid-community/core';\nimport { PrimaryColsPanel } from '@ag-grid-enterprise/column-tool-panel';\nlet EnterpriseMenuFactory = class EnterpriseMenuFactory extends BeanStub {\n    hideActiveMenu() {\n        this.destroyBean(this.activeMenu);\n    }\n    showMenuAfterMouseEvent(column, mouseEvent, defaultTab) {\n        this.showMenu(column, (menu) => {\n            const ePopup = menu.getGui();\n            this.popupService.positionPopupUnderMouseEvent({\n                type: 'columnMenu',\n                column,\n                mouseEvent,\n                ePopup\n            });\n            if (defaultTab) {\n                menu.showTab(defaultTab);\n            }\n        }, 'columnMenu', defaultTab, undefined, mouseEvent.target);\n    }\n    showMenuAfterButtonClick(column, eventSource, containerType, defaultTab, restrictToTabs) {\n        let multiplier = -1;\n        let alignSide = 'left';\n        if (this.gridOptionsService.is('enableRtl')) {\n            multiplier = 1;\n            alignSide = 'right';\n        }\n        this.showMenu(column, (menu) => {\n            const ePopup = menu.getGui();\n            this.popupService.positionPopupByComponent({\n                type: containerType,\n                column,\n                eventSource,\n                ePopup,\n                alignSide,\n                nudgeX: 9 * multiplier,\n                nudgeY: -23,\n                position: 'under',\n                keepWithinBounds: true,\n            });\n            if (defaultTab) {\n                menu.showTab(defaultTab);\n            }\n        }, containerType, defaultTab, restrictToTabs, eventSource);\n    }\n    showMenu(column, positionCallback, containerType, defaultTab, restrictToTabs, eventSource) {\n        const { menu, eMenuGui, currentHeaderPosition, currentColumnIndex, anchorToElement } = this.getMenuParams(column, restrictToTabs, eventSource);\n        const closedFuncs = [];\n        closedFuncs.push(this.getClosedCallback(column, menu, currentHeaderPosition, currentColumnIndex, eventSource));\n        const translate = this.localeService.getLocaleTextFunc();\n        // need to show filter before positioning, as only after filter\n        // is visible can we find out what the width of it is\n        const addPopupRes = this.popupService.addPopup({\n            modal: true,\n            eChild: eMenuGui,\n            closeOnEsc: true,\n            closedCallback: (e) => {\n                closedFuncs.forEach(f => f(e));\n            },\n            afterGuiAttached: params => menu.afterGuiAttached(Object.assign({}, { container: containerType }, params)),\n            // if defaultTab is not present, positionCallback will be called\n            // after `showTabBasedOnPreviousSelection` is called.\n            positionCallback: !!defaultTab ? () => positionCallback(menu) : undefined,\n            ariaLabel: translate('ariaLabelColumnMenu', 'Column Menu')\n        });\n        if (!defaultTab) {\n            menu.showTabBasedOnPreviousSelection();\n            // reposition the menu because the method above could load\n            // an element that is bigger than enterpriseMenu header.\n            positionCallback(menu);\n        }\n        // if user starts showing / hiding columns, or otherwise move the underlying column\n        // for this menu, we want to stop tracking the menu with the column position. otherwise\n        // the menu would move as the user is using the columns tab inside the menu.\n        const stopAnchoringPromise = this.popupService.setPopupPositionRelatedToElement(eMenuGui, anchorToElement);\n        if (stopAnchoringPromise) {\n            this.addStopAnchoring(stopAnchoringPromise, column, closedFuncs);\n        }\n        menu.addEventListener(EnterpriseMenu.EVENT_TAB_SELECTED, (event) => {\n            this.lastSelectedTab = event.key;\n        });\n        column.setMenuVisible(true, 'contextMenu');\n        this.activeMenu = menu;\n        menu.addEventListener(BeanStub.EVENT_DESTROYED, () => {\n            if (this.activeMenu === menu) {\n                this.activeMenu = null;\n            }\n        });\n    }\n    addStopAnchoring(stopAnchoringPromise, column, closedFuncsArr) {\n        stopAnchoringPromise.then((stopAnchoringFunc) => {\n            column.addEventListener('leftChanged', stopAnchoringFunc);\n            column.addEventListener('visibleChanged', stopAnchoringFunc);\n            closedFuncsArr.push(() => {\n                column.removeEventListener('leftChanged', stopAnchoringFunc);\n                column.removeEventListener('visibleChanged', stopAnchoringFunc);\n            });\n        });\n    }\n    getClosedCallback(column, menu, headerPosition, columnIndex, eventSource) {\n        return (e) => {\n            this.destroyBean(menu);\n            column.setMenuVisible(false, 'contextMenu');\n            const isKeyboardEvent = e instanceof KeyboardEvent;\n            if (!isKeyboardEvent || !eventSource) {\n                return;\n            }\n            const isColumnStillVisible = this.columnModel.getAllDisplayedColumns().some(col => col === column);\n            if (isColumnStillVisible && _.isVisible(eventSource)) {\n                const focusableEl = this.focusService.findTabbableParent(eventSource);\n                if (focusableEl) {\n                    if (column) {\n                        this.headerNavigationService.scrollToColumn(column);\n                    }\n                    focusableEl.focus();\n                }\n            }\n            // if the focusEl is no longer in the DOM, we try to focus\n            // the header that is closest to the previous header position\n            else if (headerPosition && columnIndex !== -1) {\n                const allColumns = this.columnModel.getAllDisplayedColumns();\n                const columnToFocus = allColumns[columnIndex] || _.last(allColumns);\n                if (columnToFocus) {\n                    this.focusService.focusHeaderPosition({\n                        headerPosition: {\n                            headerRowIndex: headerPosition.headerRowIndex,\n                            column: columnToFocus\n                        }\n                    });\n                }\n            }\n        };\n    }\n    getMenuParams(column, restrictToTabs, eventSource) {\n        const menu = this.createBean(new EnterpriseMenu(column, this.lastSelectedTab, restrictToTabs));\n        return {\n            menu,\n            eMenuGui: menu.getGui(),\n            currentHeaderPosition: this.focusService.getFocusedHeader(),\n            currentColumnIndex: this.columnModel.getAllDisplayedColumns().indexOf(column),\n            anchorToElement: eventSource || this.ctrlsService.getGridBodyCtrl().getGui()\n        };\n    }\n    isMenuEnabled(column) {\n        return column.getMenuTabs(EnterpriseMenu.TABS_DEFAULT).length > 0;\n    }\n};\n__decorate([\n    Autowired('popupService')\n], EnterpriseMenuFactory.prototype, \"popupService\", void 0);\n__decorate([\n    Autowired('focusService')\n], EnterpriseMenuFactory.prototype, \"focusService\", void 0);\n__decorate([\n    Autowired('headerNavigationService')\n], EnterpriseMenuFactory.prototype, \"headerNavigationService\", void 0);\n__decorate([\n    Autowired('ctrlsService')\n], EnterpriseMenuFactory.prototype, \"ctrlsService\", void 0);\n__decorate([\n    Autowired('columnModel')\n], EnterpriseMenuFactory.prototype, \"columnModel\", void 0);\nEnterpriseMenuFactory = __decorate([\n    Bean('menuFactory')\n], EnterpriseMenuFactory);\nexport { EnterpriseMenuFactory };\nexport class EnterpriseMenu extends BeanStub {\n    constructor(column, initialSelection, restrictTo) {\n        super();\n        this.tabFactories = {};\n        this.includeChecks = {};\n        this.column = column;\n        this.initialSelection = initialSelection;\n        this.tabFactories[EnterpriseMenu.TAB_GENERAL] = this.createMainPanel.bind(this);\n        this.tabFactories[EnterpriseMenu.TAB_FILTER] = this.createFilterPanel.bind(this);\n        this.tabFactories[EnterpriseMenu.TAB_COLUMNS] = this.createColumnsPanel.bind(this);\n        this.includeChecks[EnterpriseMenu.TAB_GENERAL] = () => true;\n        this.includeChecks[EnterpriseMenu.TAB_FILTER] = () => this.filterManager.isFilterAllowed(column);\n        this.includeChecks[EnterpriseMenu.TAB_COLUMNS] = () => true;\n        this.restrictTo = restrictTo;\n    }\n    init() {\n        const tabs = this.getTabsToCreate().map(name => this.createTab(name));\n        this.tabbedLayout = new TabbedLayout({\n            items: tabs,\n            cssClass: 'ag-menu',\n            onActiveItemClicked: this.onHidePopup.bind(this),\n            onItemClicked: this.onTabItemClicked.bind(this)\n        });\n        this.createBean(this.tabbedLayout);\n        if (this.mainMenuList) {\n            this.mainMenuList.setParentComponent(this.tabbedLayout);\n        }\n        this.addDestroyFunc(() => this.destroyBean(this.tabbedLayout));\n    }\n    getTabsToCreate() {\n        if (this.restrictTo) {\n            return this.restrictTo;\n        }\n        return this.column.getMenuTabs(EnterpriseMenu.TABS_DEFAULT)\n            .filter(tabName => this.isValidMenuTabItem(tabName))\n            .filter(tabName => this.isNotSuppressed(tabName))\n            .filter(tabName => this.isModuleLoaded(tabName));\n    }\n    isModuleLoaded(menuTabName) {\n        if (menuTabName === EnterpriseMenu.TAB_COLUMNS) {\n            return ModuleRegistry.__isRegistered(ModuleNames.ColumnsToolPanelModule, this.context.getGridId());\n        }\n        return true;\n    }\n    isValidMenuTabItem(menuTabName) {\n        let isValid = true;\n        let itemsToConsider = EnterpriseMenu.TABS_DEFAULT;\n        if (this.restrictTo != null) {\n            isValid = this.restrictTo.indexOf(menuTabName) > -1;\n            itemsToConsider = this.restrictTo;\n        }\n        isValid = isValid && EnterpriseMenu.TABS_DEFAULT.indexOf(menuTabName) > -1;\n        if (!isValid) {\n            console.warn(`AG Grid: Trying to render an invalid menu item '${menuTabName}'. Check that your 'menuTabs' contains one of [${itemsToConsider}]`);\n        }\n        return isValid;\n    }\n    isNotSuppressed(menuTabName) {\n        return this.includeChecks[menuTabName]();\n    }\n    createTab(name) {\n        return this.tabFactories[name]();\n    }\n    showTabBasedOnPreviousSelection() {\n        // show the tab the user was on last time they had a menu open\n        this.showTab(this.initialSelection);\n    }\n    showTab(toShow) {\n        if (this.tabItemColumns && toShow === EnterpriseMenu.TAB_COLUMNS) {\n            this.tabbedLayout.showItem(this.tabItemColumns);\n        }\n        else if (this.tabItemFilter && toShow === EnterpriseMenu.TAB_FILTER) {\n            this.tabbedLayout.showItem(this.tabItemFilter);\n        }\n        else if (this.tabItemGeneral && toShow === EnterpriseMenu.TAB_GENERAL) {\n            this.tabbedLayout.showItem(this.tabItemGeneral);\n        }\n        else {\n            this.tabbedLayout.showFirstItem();\n        }\n    }\n    onTabItemClicked(event) {\n        let key = null;\n        switch (event.item) {\n            case this.tabItemColumns:\n                key = EnterpriseMenu.TAB_COLUMNS;\n                break;\n            case this.tabItemFilter:\n                key = EnterpriseMenu.TAB_FILTER;\n                break;\n            case this.tabItemGeneral:\n                key = EnterpriseMenu.TAB_GENERAL;\n                break;\n        }\n        if (key) {\n            this.activateTab(key);\n        }\n    }\n    activateTab(tab) {\n        const ev = {\n            type: EnterpriseMenu.EVENT_TAB_SELECTED,\n            key: tab\n        };\n        this.dispatchEvent(ev);\n    }\n    getMenuItems() {\n        const defaultMenuOptions = this.getDefaultMenuOptions();\n        let result;\n        const userFunc = this.gridOptionsService.getCallback('getMainMenuItems');\n        if (userFunc) {\n            result = userFunc({\n                column: this.column,\n                defaultItems: defaultMenuOptions\n            });\n        }\n        else {\n            result = defaultMenuOptions;\n        }\n        // GUI looks weird when two separators are side by side. this can happen accidentally\n        // if we remove items from the menu then two separators can edit up adjacent.\n        _.removeRepeatsFromArray(result, EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        return result;\n    }\n    getDefaultMenuOptions() {\n        const result = [];\n        const allowPinning = !this.column.getColDef().lockPinned;\n        const rowGroupCount = this.columnModel.getRowGroupColumns().length;\n        const doingGrouping = rowGroupCount > 0;\n        const groupedByThisColumn = this.columnModel.getRowGroupColumns().indexOf(this.column) >= 0;\n        const allowValue = this.column.isAllowValue();\n        const allowRowGroup = this.column.isAllowRowGroup();\n        const isPrimary = this.column.isPrimary();\n        const pivotModeOn = this.columnModel.isPivotMode();\n        const isInMemoryRowModel = this.rowModel.getType() === 'clientSide';\n        const usingTreeData = this.gridOptionsService.is('treeData');\n        const allowValueAgg = \n        // if primary, then only allow aggValue if grouping and it's a value columns\n        (isPrimary && doingGrouping && allowValue)\n            // secondary columns can always have aggValue, as it means it's a pivot value column\n            || !isPrimary;\n        if (allowPinning) {\n            result.push('pinSubMenu');\n        }\n        if (allowValueAgg) {\n            result.push('valueAggSubMenu');\n        }\n        if (allowPinning || allowValueAgg) {\n            result.push(EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        }\n        result.push('autoSizeThis');\n        result.push('autoSizeAll');\n        result.push(EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        if (!!this.column.getColDef().showRowGroup) {\n            result.push('rowUnGroup');\n        }\n        if (allowRowGroup && this.column.isPrimary()) {\n            if (groupedByThisColumn) {\n                result.push('rowUnGroup');\n            }\n            else {\n                result.push('rowGroup');\n            }\n        }\n        result.push(EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        result.push('resetColumns');\n        // only add grouping expand/collapse if grouping in the InMemoryRowModel\n        // if pivoting, we only have expandable groups if grouping by 2 or more columns\n        // as the lowest level group is not expandable while pivoting.\n        // if not pivoting, then any active row group can be expanded.\n        const allowExpandAndContract = isInMemoryRowModel && (usingTreeData || rowGroupCount > (pivotModeOn ? 1 : 0));\n        if (allowExpandAndContract) {\n            result.push('expandAll');\n            result.push('contractAll');\n        }\n        return result;\n    }\n    createMainPanel() {\n        this.mainMenuList = this.createManagedBean(new AgMenuList());\n        const menuItems = this.getMenuItems();\n        const menuItemsMapped = this.menuItemMapper.mapWithStockItems(menuItems, this.column);\n        this.mainMenuList.addMenuItems(menuItemsMapped);\n        this.mainMenuList.addEventListener(AgMenuItemComponent.EVENT_MENU_ITEM_SELECTED, this.onHidePopup.bind(this));\n        this.tabItemGeneral = {\n            title: _.createIconNoSpan('menu', this.gridOptionsService, this.column),\n            titleLabel: EnterpriseMenu.TAB_GENERAL.replace('MenuTab', ''),\n            bodyPromise: AgPromise.resolve(this.mainMenuList.getGui()),\n            name: EnterpriseMenu.TAB_GENERAL\n        };\n        return this.tabItemGeneral;\n    }\n    onHidePopup(event) {\n        let keyboardEvent;\n        if (event && event.event && event.event instanceof KeyboardEvent) {\n            keyboardEvent = event.event;\n        }\n        this.hidePopupFunc(keyboardEvent && { keyboardEvent: keyboardEvent });\n        // this method only gets called when the menu was closed by selection an option\n        // in this case we highlight the cell that was previously highlighted\n        const focusedCell = this.focusService.getFocusedCell();\n        const eDocument = this.gridOptionsService.getDocument();\n        if (eDocument.activeElement === eDocument.body && focusedCell) {\n            const { rowIndex, rowPinned, column } = focusedCell;\n            this.focusService.setFocusedCell({ rowIndex, column, rowPinned, forceBrowserFocus: true, preventScrollOnBrowserFocus: true });\n        }\n    }\n    createFilterPanel() {\n        const filterWrapper = this.filterManager.getOrCreateFilterWrapper(this.column, 'COLUMN_MENU');\n        if (!filterWrapper) {\n            throw new Error('AG Grid - Unable to instantiate filter');\n        }\n        const afterFilterAttachedCallback = (params) => {\n            if (!(filterWrapper === null || filterWrapper === void 0 ? void 0 : filterWrapper.filterPromise)) {\n                return;\n            }\n            // slightly odd block this - this promise will always have been resolved by the time it gets here, so won't be\n            // async (_unless_ in react or similar, but if so why not encountered before now?).\n            // I'd suggest a future improvement would be to remove/replace this promise as this block just wont work if it is\n            // async and is confusing if you don't have this context\n            filterWrapper.filterPromise.then(filter => {\n                if (filter && filter.afterGuiAttached) {\n                    filter.afterGuiAttached(params);\n                }\n            });\n        };\n        // see comment above\n        const afterDetachedCallback = () => { var _a; return (_a = filterWrapper === null || filterWrapper === void 0 ? void 0 : filterWrapper.filterPromise) === null || _a === void 0 ? void 0 : _a.then(filter => { var _a; return (_a = filter === null || filter === void 0 ? void 0 : filter.afterGuiDetached) === null || _a === void 0 ? void 0 : _a.call(filter); }); };\n        this.tabItemFilter = {\n            title: _.createIconNoSpan('filter', this.gridOptionsService, this.column),\n            titleLabel: EnterpriseMenu.TAB_FILTER.replace('MenuTab', ''),\n            bodyPromise: filterWrapper === null || filterWrapper === void 0 ? void 0 : filterWrapper.guiPromise,\n            afterAttachedCallback: afterFilterAttachedCallback,\n            afterDetachedCallback,\n            name: EnterpriseMenu.TAB_FILTER\n        };\n        return this.tabItemFilter;\n    }\n    createColumnsPanel() {\n        const eWrapperDiv = document.createElement('div');\n        eWrapperDiv.classList.add('ag-menu-column-select-wrapper');\n        const columnSelectPanel = this.createManagedBean(new PrimaryColsPanel());\n        let columnsMenuParams = this.column.getColDef().columnsMenuParams;\n        if (!columnsMenuParams) {\n            columnsMenuParams = {};\n        }\n        const { contractColumnSelection, suppressColumnExpandAll, suppressColumnFilter, suppressColumnSelectAll, suppressSyncLayoutWithGrid, columnLayout } = columnsMenuParams;\n        columnSelectPanel.init(false, {\n            suppressColumnMove: false,\n            suppressValues: false,\n            suppressPivots: false,\n            suppressRowGroups: false,\n            suppressPivotMode: false,\n            contractColumnSelection: !!contractColumnSelection,\n            suppressColumnExpandAll: !!suppressColumnExpandAll,\n            suppressColumnFilter: !!suppressColumnFilter,\n            suppressColumnSelectAll: !!suppressColumnSelectAll,\n            suppressSyncLayoutWithGrid: !!columnLayout || !!suppressSyncLayoutWithGrid,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsService.context\n        }, 'columnMenu');\n        if (columnLayout) {\n            columnSelectPanel.setColumnLayout(columnLayout);\n        }\n        const columnSelectPanelGui = columnSelectPanel.getGui();\n        columnSelectPanelGui.classList.add('ag-menu-column-select');\n        eWrapperDiv.appendChild(columnSelectPanelGui);\n        this.tabItemColumns = {\n            title: _.createIconNoSpan('columns', this.gridOptionsService, this.column),\n            titleLabel: EnterpriseMenu.TAB_COLUMNS.replace('MenuTab', ''),\n            bodyPromise: AgPromise.resolve(eWrapperDiv),\n            name: EnterpriseMenu.TAB_COLUMNS\n        };\n        return this.tabItemColumns;\n    }\n    afterGuiAttached(params) {\n        const { container, hidePopup } = params;\n        this.tabbedLayout.setAfterAttachedParams({ container, hidePopup });\n        if (hidePopup) {\n            this.hidePopupFunc = hidePopup;\n            this.addDestroyFunc(hidePopup);\n        }\n    }\n    getGui() {\n        return this.tabbedLayout.getGui();\n    }\n}\nEnterpriseMenu.EVENT_TAB_SELECTED = 'tabSelected';\nEnterpriseMenu.TAB_FILTER = 'filterMenuTab';\nEnterpriseMenu.TAB_GENERAL = 'generalMenuTab';\nEnterpriseMenu.TAB_COLUMNS = 'columnsMenuTab';\nEnterpriseMenu.TABS_DEFAULT = [EnterpriseMenu.TAB_GENERAL, EnterpriseMenu.TAB_FILTER, EnterpriseMenu.TAB_COLUMNS];\nEnterpriseMenu.MENU_ITEM_SEPARATOR = 'separator';\n__decorate([\n    Autowired('columnModel')\n], EnterpriseMenu.prototype, \"columnModel\", void 0);\n__decorate([\n    Autowired('filterManager')\n], EnterpriseMenu.prototype, \"filterManager\", void 0);\n__decorate([\n    Autowired('gridApi')\n], EnterpriseMenu.prototype, \"gridApi\", void 0);\n__decorate([\n    Autowired('columnApi')\n], EnterpriseMenu.prototype, \"columnApi\", void 0);\n__decorate([\n    Autowired('menuItemMapper')\n], EnterpriseMenu.prototype, \"menuItemMapper\", void 0);\n__decorate([\n    Autowired('rowModel')\n], EnterpriseMenu.prototype, \"rowModel\", void 0);\n__decorate([\n    Autowired('focusService')\n], EnterpriseMenu.prototype, \"focusService\", void 0);\n__decorate([\n    PostConstruct\n], EnterpriseMenu.prototype, \"init\", null);\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, AgMenuItemComponent, AgMenuList, Autowired, Bean, BeanStub, Component, ModuleNames, ModuleRegistry, Optional, PostConstruct } from \"@ag-grid-community/core\";\nconst CSS_MENU = 'ag-menu';\nconst CSS_CONTEXT_MENU_OPEN = 'ag-context-menu-open';\nlet ContextMenuFactory = class ContextMenuFactory extends BeanStub {\n    hideActiveMenu() {\n        this.destroyBean(this.activeMenu);\n    }\n    getMenuItems(node, column, value) {\n        const defaultMenuOptions = [];\n        if (_.exists(node) && ModuleRegistry.__isRegistered(ModuleNames.ClipboardModule, this.context.getGridId())) {\n            if (column) {\n                // only makes sense if column exists, could have originated from a row\n                if (!this.gridOptionsService.is('suppressCutToClipboard')) {\n                    defaultMenuOptions.push('cut');\n                }\n                defaultMenuOptions.push('copy', 'copyWithHeaders', 'copyWithGroupHeaders', 'paste', 'separator');\n            }\n        }\n        if (this.gridOptionsService.is('enableCharts') && ModuleRegistry.__isRegistered(ModuleNames.GridChartsModule, this.context.getGridId())) {\n            if (this.columnModel.isPivotMode()) {\n                defaultMenuOptions.push('pivotChart');\n            }\n            if (this.rangeService && !this.rangeService.isEmpty()) {\n                defaultMenuOptions.push('chartRange');\n            }\n        }\n        if (_.exists(node)) {\n            // if user clicks a cell\n            const csvModuleMissing = !ModuleRegistry.__isRegistered(ModuleNames.CsvExportModule, this.context.getGridId());\n            const excelModuleMissing = !ModuleRegistry.__isRegistered(ModuleNames.ExcelExportModule, this.context.getGridId());\n            const suppressExcel = this.gridOptionsService.is('suppressExcelExport') || excelModuleMissing;\n            const suppressCsv = this.gridOptionsService.is('suppressCsvExport') || csvModuleMissing;\n            const onIPad = _.isIOSUserAgent();\n            const anyExport = !onIPad && (!suppressExcel || !suppressCsv);\n            if (anyExport) {\n                defaultMenuOptions.push('export');\n            }\n        }\n        const userFunc = this.gridOptionsService.getCallback('getContextMenuItems');\n        if (userFunc) {\n            const params = {\n                node: node,\n                column: column,\n                value: value,\n                defaultItems: defaultMenuOptions.length ? defaultMenuOptions : undefined,\n            };\n            return userFunc(params);\n        }\n        return defaultMenuOptions;\n    }\n    onContextMenu(mouseEvent, touchEvent, rowNode, column, value, anchorToElement) {\n        // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n        // not everyone wants this, so first 'if' below allows to turn this hack off.\n        if (!this.gridOptionsService.is('allowContextMenuWithControlKey')) {\n            // then do the check\n            if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n                return;\n            }\n        }\n        // need to do this regardless of context menu showing or not, so doing\n        // before the isSuppressContextMenu() check\n        if (mouseEvent) {\n            this.blockMiddleClickScrollsIfNeeded(mouseEvent);\n        }\n        if (this.gridOptionsService.is('suppressContextMenu')) {\n            return;\n        }\n        const eventOrTouch = mouseEvent ? mouseEvent : touchEvent.touches[0];\n        if (this.showMenu(rowNode, column, value, eventOrTouch, anchorToElement)) {\n            const event = mouseEvent ? mouseEvent : touchEvent;\n            event.preventDefault();\n        }\n    }\n    blockMiddleClickScrollsIfNeeded(mouseEvent) {\n        // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n        // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n        // button in the browser). so this property allows the user to receive middle button clicks if\n        // they want.\n        const { gridOptionsService } = this;\n        const { which } = mouseEvent;\n        if (gridOptionsService.is('suppressMiddleClickScrolls') && which === 2) {\n            mouseEvent.preventDefault();\n        }\n    }\n    showMenu(node, column, value, mouseEvent, anchorToElement) {\n        const menuItems = this.getMenuItems(node, column, value);\n        const eGridBodyGui = this.ctrlsService.getGridBodyCtrl().getGui();\n        if (menuItems === undefined || _.missingOrEmpty(menuItems)) {\n            return false;\n        }\n        const menu = new ContextMenu(menuItems);\n        this.createBean(menu);\n        const eMenuGui = menu.getGui();\n        const positionParams = {\n            column: column,\n            rowNode: node,\n            type: 'contextMenu',\n            mouseEvent: mouseEvent,\n            ePopup: eMenuGui,\n            // move one pixel away so that accidentally double clicking\n            // won't show the browser's contextmenu\n            nudgeY: 1\n        };\n        const translate = this.localeService.getLocaleTextFunc();\n        const addPopupRes = this.popupService.addPopup({\n            modal: true,\n            eChild: eMenuGui,\n            closeOnEsc: true,\n            closedCallback: () => {\n                eGridBodyGui.classList.remove(CSS_CONTEXT_MENU_OPEN);\n                this.destroyBean(menu);\n            },\n            click: mouseEvent,\n            positionCallback: () => {\n                const isRtl = this.gridOptionsService.is('enableRtl');\n                this.popupService.positionPopupUnderMouseEvent(Object.assign(Object.assign({}, positionParams), { nudgeX: isRtl ? (eMenuGui.offsetWidth + 1) * -1 : 1 }));\n            },\n            // so when browser is scrolled down, or grid is scrolled, context menu stays with cell\n            anchorToElement: anchorToElement,\n            ariaLabel: translate('ariaLabelContextMenu', 'Context Menu')\n        });\n        if (addPopupRes) {\n            eGridBodyGui.classList.add(CSS_CONTEXT_MENU_OPEN);\n            menu.afterGuiAttached({ container: 'contextMenu', hidePopup: addPopupRes.hideFunc });\n        }\n        // there should never be an active menu at this point, however it was found\n        // that you could right click a second time just 1 or 2 pixels from the first\n        // click, and another menu would pop up. so somehow the logic for closing the\n        // first menu (clicking outside should close it) was glitchy somehow. an easy\n        // way to avoid this is just remove the old context menu here if it exists.\n        if (this.activeMenu) {\n            this.hideActiveMenu();\n        }\n        this.activeMenu = menu;\n        menu.addEventListener(BeanStub.EVENT_DESTROYED, () => {\n            if (this.activeMenu === menu) {\n                this.activeMenu = null;\n            }\n        });\n        // hide the popup if something gets selected\n        if (addPopupRes) {\n            menu.addEventListener(AgMenuItemComponent.EVENT_MENU_ITEM_SELECTED, addPopupRes.hideFunc);\n        }\n        return true;\n    }\n};\n__decorate([\n    Autowired('popupService')\n], ContextMenuFactory.prototype, \"popupService\", void 0);\n__decorate([\n    Optional('rangeService')\n], ContextMenuFactory.prototype, \"rangeService\", void 0);\n__decorate([\n    Autowired('ctrlsService')\n], ContextMenuFactory.prototype, \"ctrlsService\", void 0);\n__decorate([\n    Autowired('columnModel')\n], ContextMenuFactory.prototype, \"columnModel\", void 0);\nContextMenuFactory = __decorate([\n    Bean('contextMenuFactory')\n], ContextMenuFactory);\nexport { ContextMenuFactory };\nclass ContextMenu extends Component {\n    constructor(menuItems) {\n        super(/* html */ `<div class=\"${CSS_MENU}\" role=\"presentation\"></div>`);\n        this.menuList = null;\n        this.focusedCell = null;\n        this.menuItems = menuItems;\n    }\n    addMenuItems() {\n        const menuList = this.createManagedBean(new AgMenuList());\n        const menuItemsMapped = this.menuItemMapper.mapWithStockItems(this.menuItems, null);\n        menuList.addMenuItems(menuItemsMapped);\n        this.appendChild(menuList);\n        this.menuList = menuList;\n        menuList.addEventListener(AgMenuItemComponent.EVENT_MENU_ITEM_SELECTED, (e) => this.dispatchEvent(e));\n    }\n    afterGuiAttached(params) {\n        if (params.hidePopup) {\n            this.addDestroyFunc(params.hidePopup);\n        }\n        this.focusedCell = this.focusService.getFocusedCell();\n        if (this.menuList) {\n            this.focusService.focusInto(this.menuList.getGui());\n        }\n    }\n    restoreFocusedCell() {\n        const currentFocusedCell = this.focusService.getFocusedCell();\n        if (currentFocusedCell && this.focusedCell && this.cellPositionUtils.equals(currentFocusedCell, this.focusedCell)) {\n            const { rowIndex, rowPinned, column } = this.focusedCell;\n            const doc = this.gridOptionsService.getDocument();\n            if (doc.activeElement === doc.body) {\n                this.focusService.setFocusedCell({ rowIndex, column, rowPinned, forceBrowserFocus: true });\n            }\n        }\n    }\n    destroy() {\n        this.restoreFocusedCell();\n        super.destroy();\n    }\n}\n__decorate([\n    Autowired('menuItemMapper')\n], ContextMenu.prototype, \"menuItemMapper\", void 0);\n__decorate([\n    Autowired('focusService')\n], ContextMenu.prototype, \"focusService\", void 0);\n__decorate([\n    Autowired('cellPositionUtils')\n], ContextMenu.prototype, \"cellPositionUtils\", void 0);\n__decorate([\n    PostConstruct\n], ContextMenu.prototype, \"addMenuItems\", null);\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, BeanStub, ModuleNames, ModuleRegistry, Optional, } from '@ag-grid-community/core';\nlet MenuItemMapper = class MenuItemMapper extends BeanStub {\n    mapWithStockItems(originalList, column) {\n        if (!originalList) {\n            return [];\n        }\n        const resultList = [];\n        originalList.forEach(menuItemOrString => {\n            let result;\n            if (typeof menuItemOrString === 'string') {\n                result = this.getStockMenuItem(menuItemOrString, column);\n            }\n            else {\n                // Spread to prevent leaking mapped subMenus back into the original menuItem\n                result = Object.assign({}, menuItemOrString);\n            }\n            // if no mapping, can happen when module is not loaded but user tries to use module anyway\n            if (!result) {\n                return;\n            }\n            const resultDef = result;\n            const { subMenu } = resultDef;\n            if (subMenu && subMenu instanceof Array) {\n                resultDef.subMenu = this.mapWithStockItems(subMenu, column);\n            }\n            if (result != null) {\n                resultList.push(result);\n            }\n        });\n        return resultList;\n    }\n    getStockMenuItem(key, column) {\n        var _a, _b;\n        const localeTextFunc = this.localeService.getLocaleTextFunc();\n        const skipHeaderOnAutoSize = this.gridOptionsService.is('skipHeaderOnAutoSize');\n        switch (key) {\n            case 'pinSubMenu':\n                return {\n                    name: localeTextFunc('pinColumn', 'Pin Column'),\n                    icon: _.createIconNoSpan('menuPin', this.gridOptionsService, null),\n                    subMenu: ['clearPinned', 'pinLeft', 'pinRight']\n                };\n            case 'pinLeft':\n                return {\n                    name: localeTextFunc('pinLeft', 'Pin Left'),\n                    action: () => this.columnModel.setColumnPinned(column, 'left', \"contextMenu\"),\n                    checked: !!column && column.isPinnedLeft()\n                };\n            case 'pinRight':\n                return {\n                    name: localeTextFunc('pinRight', 'Pin Right'),\n                    action: () => this.columnModel.setColumnPinned(column, 'right', \"contextMenu\"),\n                    checked: !!column && column.isPinnedRight()\n                };\n            case 'clearPinned':\n                return {\n                    name: localeTextFunc('noPin', 'No Pin'),\n                    action: () => this.columnModel.setColumnPinned(column, null, \"contextMenu\"),\n                    checked: !!column && !column.isPinned()\n                };\n            case 'valueAggSubMenu':\n                if (ModuleRegistry.__assertRegistered(ModuleNames.RowGroupingModule, 'Aggregation from Menu', this.context.getGridId())) {\n                    if (!(column === null || column === void 0 ? void 0 : column.isPrimary()) && !(column === null || column === void 0 ? void 0 : column.getColDef().pivotValueColumn)) {\n                        return null;\n                    }\n                    return {\n                        name: localeTextFunc('valueAggregation', 'Value Aggregation'),\n                        icon: _.createIconNoSpan('menuValue', this.gridOptionsService, null),\n                        subMenu: this.createAggregationSubMenu(column)\n                    };\n                }\n                else {\n                    return null;\n                }\n            case 'autoSizeThis':\n                return {\n                    name: localeTextFunc('autosizeThiscolumn', 'Autosize This Column'),\n                    action: () => this.columnModel.autoSizeColumn(column, skipHeaderOnAutoSize, \"contextMenu\")\n                };\n            case 'autoSizeAll':\n                return {\n                    name: localeTextFunc('autosizeAllColumns', 'Autosize All Columns'),\n                    action: () => this.columnModel.autoSizeAllColumns(skipHeaderOnAutoSize, \"contextMenu\")\n                };\n            case 'rowGroup':\n                return {\n                    name: localeTextFunc('groupBy', 'Group by') + ' ' + _.escapeString(this.columnModel.getDisplayNameForColumn(column, 'header')),\n                    disabled: (column === null || column === void 0 ? void 0 : column.isRowGroupActive()) || !(column === null || column === void 0 ? void 0 : column.getColDef().enableRowGroup),\n                    action: () => this.columnModel.addRowGroupColumn(column, \"contextMenu\"),\n                    icon: _.createIconNoSpan('menuAddRowGroup', this.gridOptionsService, null)\n                };\n            case 'rowUnGroup':\n                const icon = _.createIconNoSpan('menuRemoveRowGroup', this.gridOptionsService, null);\n                const showRowGroup = column === null || column === void 0 ? void 0 : column.getColDef().showRowGroup;\n                // Handle single auto group column\n                if (showRowGroup === true) {\n                    return {\n                        name: localeTextFunc('ungroupAll', 'Un-Group All'),\n                        disabled: !(column === null || column === void 0 ? void 0 : column.getColDef().showRowGroup),\n                        action: () => this.columnModel.setRowGroupColumns([], \"contextMenu\"),\n                        icon: icon\n                    };\n                }\n                // Handle multiple auto group columns\n                if (typeof showRowGroup === 'string') {\n                    const underlyingColumn = (_a = this.columnModel.getSourceColumnsForGroupColumn(column)) === null || _a === void 0 ? void 0 : _a[0];\n                    const ungroupByName = (underlyingColumn != null) ? _.escapeString(this.columnModel.getDisplayNameForColumn(underlyingColumn, 'header')) : showRowGroup;\n                    return {\n                        name: localeTextFunc('ungroupBy', 'Un-Group by') + ' ' + ungroupByName,\n                        disabled: !(column === null || column === void 0 ? void 0 : column.getColDef().showRowGroup),\n                        action: () => this.columnModel.removeRowGroupColumn(showRowGroup, \"contextMenu\"),\n                        icon: icon\n                    };\n                }\n                // Handle primary column\n                return {\n                    name: localeTextFunc('ungroupBy', 'Un-Group by') + ' ' + _.escapeString(this.columnModel.getDisplayNameForColumn(column, 'header')),\n                    disabled: !(column === null || column === void 0 ? void 0 : column.isRowGroupActive()) || !(column === null || column === void 0 ? void 0 : column.getColDef().enableRowGroup),\n                    action: () => this.columnModel.removeRowGroupColumn(column, \"contextMenu\"),\n                    icon: icon\n                };\n            case 'resetColumns':\n                return {\n                    name: localeTextFunc('resetColumns', 'Reset Columns'),\n                    action: () => this.columnModel.resetColumnState(\"contextMenu\")\n                };\n            case 'expandAll':\n                return {\n                    name: localeTextFunc('expandAll', 'Expand All Row Groups'),\n                    action: () => this.gridApi.expandAll()\n                };\n            case 'contractAll':\n                return {\n                    name: localeTextFunc('collapseAll', 'Collapse All Row Groups'),\n                    action: () => this.gridApi.collapseAll()\n                };\n            case 'copy':\n                if (ModuleRegistry.__assertRegistered(ModuleNames.ClipboardModule, 'Copy from Menu', this.context.getGridId())) {\n                    return {\n                        name: localeTextFunc('copy', 'Copy'),\n                        shortcut: localeTextFunc('ctrlC', 'Ctrl+C'),\n                        icon: _.createIconNoSpan('clipboardCopy', this.gridOptionsService, null),\n                        action: () => this.clipboardService.copyToClipboard()\n                    };\n                }\n                else {\n                    return null;\n                }\n            case 'copyWithHeaders':\n                if (ModuleRegistry.__assertRegistered(ModuleNames.ClipboardModule, 'Copy with Headers from Menu', this.context.getGridId())) {\n                    return {\n                        name: localeTextFunc('copyWithHeaders', 'Copy with Headers'),\n                        // shortcut: localeTextFunc('ctrlC','Ctrl+C'),\n                        icon: _.createIconNoSpan('clipboardCopy', this.gridOptionsService, null),\n                        action: () => this.clipboardService.copyToClipboard({ includeHeaders: true })\n                    };\n                }\n                else {\n                    return null;\n                }\n            case 'copyWithGroupHeaders':\n                if (ModuleRegistry.__assertRegistered(ModuleNames.ClipboardModule, 'Copy with Group Headers from Menu', this.context.getGridId())) {\n                    return {\n                        name: localeTextFunc('copyWithGroupHeaders', 'Copy with Group Headers'),\n                        // shortcut: localeTextFunc('ctrlC','Ctrl+C'),\n                        icon: _.createIconNoSpan('clipboardCopy', this.gridOptionsService, null),\n                        action: () => this.clipboardService.copyToClipboard({ includeHeaders: true, includeGroupHeaders: true })\n                    };\n                }\n                else {\n                    return null;\n                }\n            case 'cut':\n                if (ModuleRegistry.__assertRegistered(ModuleNames.ClipboardModule, 'Cut from Menu', this.context.getGridId())) {\n                    const focusedCell = this.focusService.getFocusedCell();\n                    const rowNode = focusedCell ? this.rowPositionUtils.getRowNode(focusedCell) : null;\n                    const isEditable = rowNode ? focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell.column.isCellEditable(rowNode) : false;\n                    return {\n                        name: localeTextFunc('cut', 'Cut'),\n                        shortcut: localeTextFunc('ctrlX', 'Ctrl+X'),\n                        icon: _.createIconNoSpan('clipboardCut', this.gridOptionsService, null),\n                        disabled: !isEditable || this.gridOptionsService.is('suppressCutToClipboard'),\n                        action: () => this.clipboardService.cutToClipboard(undefined, 'contextMenu')\n                    };\n                }\n                else {\n                    return null;\n                }\n            case 'paste':\n                if (ModuleRegistry.__assertRegistered(ModuleNames.ClipboardModule, 'Paste from Clipboard', this.context.getGridId())) {\n                    return {\n                        name: localeTextFunc('paste', 'Paste'),\n                        shortcut: localeTextFunc('ctrlV', 'Ctrl+V'),\n                        disabled: true,\n                        icon: _.createIconNoSpan('clipboardPaste', this.gridOptionsService, null),\n                        action: () => this.clipboardService.pasteFromClipboard()\n                    };\n                }\n                else {\n                    return null;\n                }\n            case 'export':\n                const exportSubMenuItems = [];\n                const csvModuleLoaded = ModuleRegistry.__isRegistered(ModuleNames.CsvExportModule, this.context.getGridId());\n                const excelModuleLoaded = ModuleRegistry.__isRegistered(ModuleNames.ExcelExportModule, this.context.getGridId());\n                if (!this.gridOptionsService.is('suppressCsvExport') && csvModuleLoaded) {\n                    exportSubMenuItems.push('csvExport');\n                }\n                if (!this.gridOptionsService.is('suppressExcelExport') && excelModuleLoaded) {\n                    exportSubMenuItems.push('excelExport');\n                }\n                return {\n                    name: localeTextFunc('export', 'Export'),\n                    subMenu: exportSubMenuItems,\n                    icon: _.createIconNoSpan('save', this.gridOptionsService, null),\n                };\n            case 'csvExport':\n                return {\n                    name: localeTextFunc('csvExport', 'CSV Export'),\n                    icon: _.createIconNoSpan('csvExport', this.gridOptionsService, null),\n                    action: () => this.gridApi.exportDataAsCsv({})\n                };\n            case 'excelExport':\n                return {\n                    name: localeTextFunc('excelExport', 'Excel Export'),\n                    icon: _.createIconNoSpan('excelExport', this.gridOptionsService, null),\n                    action: () => this.gridApi.exportDataAsExcel()\n                };\n            case 'separator':\n                return 'separator';\n            case 'pivotChart':\n            case 'chartRange':\n                return (_b = this.chartMenuItemMapper.getChartItems(key)) !== null && _b !== void 0 ? _b : null;\n            default: {\n                console.warn(`AG Grid: unknown menu item type ${key}`);\n                return null;\n            }\n        }\n    }\n    createAggregationSubMenu(column) {\n        const localeTextFunc = this.localeService.getLocaleTextFunc();\n        let columnToUse;\n        if (column.isPrimary()) {\n            columnToUse = column;\n        }\n        else {\n            const pivotValueColumn = column.getColDef().pivotValueColumn;\n            columnToUse = _.exists(pivotValueColumn) ? pivotValueColumn : undefined;\n        }\n        const result = [];\n        if (columnToUse) {\n            const columnIsAlreadyAggValue = columnToUse.isValueActive();\n            const funcNames = this.aggFuncService.getFuncNames(columnToUse);\n            result.push({\n                name: localeTextFunc('noAggregation', 'None'),\n                action: () => {\n                    this.columnModel.removeValueColumn(columnToUse, \"contextMenu\");\n                    this.columnModel.setColumnAggFunc(columnToUse, undefined, \"contextMenu\");\n                },\n                checked: !columnIsAlreadyAggValue\n            });\n            funcNames.forEach(funcName => {\n                result.push({\n                    name: localeTextFunc(funcName, _.capitalise(funcName)),\n                    action: () => {\n                        this.columnModel.setColumnAggFunc(columnToUse, funcName, \"contextMenu\");\n                        this.columnModel.addValueColumn(columnToUse, \"contextMenu\");\n                    },\n                    checked: columnIsAlreadyAggValue && columnToUse.getAggFunc() === funcName\n                });\n            });\n        }\n        return result;\n    }\n};\n__decorate([\n    Autowired('columnModel')\n], MenuItemMapper.prototype, \"columnModel\", void 0);\n__decorate([\n    Autowired('gridApi')\n], MenuItemMapper.prototype, \"gridApi\", void 0);\n__decorate([\n    Optional('clipboardService')\n], MenuItemMapper.prototype, \"clipboardService\", void 0);\n__decorate([\n    Optional('aggFuncService')\n], MenuItemMapper.prototype, \"aggFuncService\", void 0);\n__decorate([\n    Autowired('focusService')\n], MenuItemMapper.prototype, \"focusService\", void 0);\n__decorate([\n    Autowired('rowPositionUtils')\n], MenuItemMapper.prototype, \"rowPositionUtils\", void 0);\n__decorate([\n    Autowired('chartMenuItemMapper')\n], MenuItemMapper.prototype, \"chartMenuItemMapper\", void 0);\nMenuItemMapper = __decorate([\n    Bean('menuItemMapper')\n], MenuItemMapper);\nexport { MenuItemMapper };\n", "// DO NOT UPDATE MANUALLY: Generated from script during build time\nexport const VERSION = '30.2.1';\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ChartMenuItemMapper_1;\nimport { Bean, BeanStub, ModuleNames, ModuleRegistry, Optional, _ } from '@ag-grid-community/core';\nlet ChartMenuItemMapper = ChartMenuItemMapper_1 = class ChartMenuItemMapper extends BeanStub {\n    getChartItems(key) {\n        var _a, _b;\n        if (!this.chartService) {\n            ModuleRegistry.__assertRegistered(ModuleNames.GridChartsModule, `the Context Menu key \"${key}\"`, this.context.getGridId());\n            return undefined;\n        }\n        const builder = key === 'pivotChart'\n            ? new PivotMenuItemMapper(this.gridOptionsService, this.chartService, this.localeService)\n            : new RangeMenuItemMapper(this.gridOptionsService, this.chartService, this.localeService);\n        let topLevelMenuItem = builder.getMenuItem();\n        const chartGroupsDef = (_b = (_a = this.gridOptionsService.get('chartToolPanelsDef')) === null || _a === void 0 ? void 0 : _a.settingsPanel) === null || _b === void 0 ? void 0 : _b.chartGroupsDef;\n        if (chartGroupsDef) {\n            // Apply filtering and ordering if chartGroupsDef provided\n            topLevelMenuItem = ChartMenuItemMapper_1.filterAndOrderChartMenu(topLevelMenuItem, chartGroupsDef, builder.getConfigLookup());\n        }\n        return this.cleanInternals(topLevelMenuItem);\n    }\n    // Remove our internal _key properties so this does not leak out of the class on the menu items.\n    cleanInternals(menuItem) {\n        if (!menuItem) {\n            return menuItem;\n        }\n        const removeKey = (m) => {\n            var _a;\n            m === null || m === void 0 ? true : delete m._key;\n            (_a = m === null || m === void 0 ? void 0 : m.subMenu) === null || _a === void 0 ? void 0 : _a.forEach(s => removeKey(s));\n            return m;\n        };\n        return removeKey(menuItem);\n    }\n    static buildLookup(menuItem) {\n        let itemLookup = {};\n        const addItem = (item) => {\n            itemLookup[item._key] = item;\n            if (item.subMenu) {\n                item.subMenu.forEach(s => addItem(s));\n            }\n        };\n        addItem(menuItem);\n        return itemLookup;\n    }\n    /**\n     * Make the MenuItem match the charts provided and their ordering on the ChartGroupsDef config object as provided by the user.\n     */\n    static filterAndOrderChartMenu(topLevelMenuItem, chartGroupsDef, configLookup) {\n        var _a;\n        const menuItemLookup = this.buildLookup(topLevelMenuItem);\n        let orderedAndFiltered = Object.assign(Object.assign({}, topLevelMenuItem), { subMenu: [] });\n        Object.entries(chartGroupsDef).forEach(([group, chartTypes]) => {\n            var _a, _b;\n            const chartConfigGroup = configLookup[group];\n            if (chartConfigGroup == undefined) {\n                _.doOnce(() => console.warn(`AG Grid - invalid chartGroupsDef config '${group}'`), `invalid_chartGroupsDef${group}`);\n                return undefined;\n            }\n            const menuItem = menuItemLookup[chartConfigGroup._key];\n            if (menuItem) {\n                if (menuItem.subMenu) {\n                    const subMenus = chartTypes.map(chartType => {\n                        const itemKey = chartConfigGroup[chartType];\n                        if (itemKey == undefined) {\n                            _.doOnce(() => console.warn(`AG Grid - invalid chartGroupsDef config '${group}.${chartType}'`), `invalid_chartGroupsDef${chartType}_${group}`);\n                            return undefined;\n                        }\n                        return menuItemLookup[itemKey];\n                    }).filter(s => s !== undefined);\n                    if (subMenus.length > 0) {\n                        menuItem.subMenu = subMenus;\n                        (_a = orderedAndFiltered.subMenu) === null || _a === void 0 ? void 0 : _a.push(menuItem);\n                    }\n                }\n                else {\n                    // Handles line case which is not actually a sub subMenu\n                    (_b = orderedAndFiltered.subMenu) === null || _b === void 0 ? void 0 : _b.push(menuItem);\n                }\n            }\n        });\n        if (((_a = orderedAndFiltered.subMenu) === null || _a === void 0 ? void 0 : _a.length) == 0) {\n            return undefined;\n        }\n        return orderedAndFiltered;\n    }\n};\n__decorate([\n    Optional('chartService')\n], ChartMenuItemMapper.prototype, \"chartService\", void 0);\nChartMenuItemMapper = ChartMenuItemMapper_1 = __decorate([\n    Bean('chartMenuItemMapper')\n], ChartMenuItemMapper);\nexport { ChartMenuItemMapper };\nclass PivotMenuItemMapper {\n    constructor(gridOptionsService, chartService, localeService) {\n        this.gridOptionsService = gridOptionsService;\n        this.chartService = chartService;\n        this.localeService = localeService;\n    }\n    getMenuItem() {\n        const localeTextFunc = this.localeService.getLocaleTextFunc();\n        const getMenuItem = (localeKey, defaultText, chartType, key) => {\n            return {\n                name: localeTextFunc(localeKey, defaultText),\n                action: () => this.chartService.createPivotChart({ chartType }),\n                _key: key\n            };\n        };\n        return {\n            name: localeTextFunc('pivotChart', 'Pivot Chart'),\n            _key: 'pivotChart',\n            subMenu: [\n                {\n                    _key: 'pivotColumnChart',\n                    name: localeTextFunc('columnChart', 'Column'),\n                    subMenu: [\n                        getMenuItem('groupedColumn', 'Grouped&lrm;', 'groupedColumn', 'pivotGroupedColumn'),\n                        getMenuItem('stackedColumn', 'Stacked&lrm;', 'stackedColumn', 'pivotStackedColumn'),\n                        getMenuItem('normalizedColumn', '100% Stacked&lrm;', 'normalizedColumn', 'pivotNormalizedColumn')\n                    ]\n                },\n                {\n                    _key: 'pivotBarChart',\n                    name: localeTextFunc('barChart', 'Bar'),\n                    subMenu: [\n                        getMenuItem('groupedBar', 'Grouped&lrm;', 'groupedBar', 'pivotGroupedBar'),\n                        getMenuItem('stackedBar', 'Stacked&lrm;', 'stackedBar', 'pivotStackedBar'),\n                        getMenuItem('normalizedBar', '100% Stacked&lrm;', 'normalizedBar', 'pivotNormalizedBar')\n                    ]\n                },\n                {\n                    _key: 'pivotPieChart',\n                    name: localeTextFunc('pieChart', 'Pie'),\n                    subMenu: [\n                        getMenuItem('pie', 'Pie&lrm;', 'pie', 'pivotPie'),\n                        getMenuItem('doughnut', 'Doughnut&lrm;', 'doughnut', 'pivotDoughnut')\n                    ]\n                },\n                getMenuItem('line', 'Line&lrm;', 'line', 'pivotLineChart'),\n                {\n                    _key: 'pivotXYChart',\n                    name: localeTextFunc('xyChart', 'X Y (Scatter)'),\n                    subMenu: [\n                        getMenuItem('scatter', 'Scatter&lrm;', 'scatter', 'pivotScatter'),\n                        getMenuItem('bubble', 'Bubble&lrm;', 'bubble', 'pivotBubble')\n                    ]\n                },\n                {\n                    _key: 'pivotAreaChart',\n                    name: localeTextFunc('areaChart', 'Area'),\n                    subMenu: [\n                        getMenuItem('area', 'Area&lrm;', 'area', 'pivotArea'),\n                        getMenuItem('stackedArea', 'Stacked&lrm;', 'stackedArea', 'pivotStackedArea'),\n                        getMenuItem('normalizedArea', '100% Stacked&lrm;', 'normalizedArea', 'pivotNormalizedArea')\n                    ]\n                },\n                getMenuItem('histogramChart', 'Histogram&lrm;', 'histogram', 'pivotHistogramChart'),\n                {\n                    _key: 'pivotCombinationChart',\n                    name: localeTextFunc('combinationChart', 'Combination'),\n                    subMenu: [\n                        getMenuItem('columnLineCombo', 'Column & Line&lrm;', 'columnLineCombo', 'pivotColumnLineCombo'),\n                        getMenuItem('AreaColumnCombo', 'Area & Column&lrm;', 'areaColumnCombo', 'pivotAreaColumnCombo')\n                    ]\n                }\n            ],\n            icon: _.createIconNoSpan('chart', this.gridOptionsService, undefined),\n        };\n    }\n    getConfigLookup() {\n        return {\n            columnGroup: {\n                _key: 'pivotColumnChart',\n                column: 'pivotGroupedColumn',\n                stackedColumn: 'pivotStackedColumn',\n                normalizedColumn: 'pivotNormalizedColumn',\n            },\n            barGroup: {\n                _key: 'pivotBarChart',\n                bar: 'pivotGroupedBar',\n                stackedBar: 'pivotStackedBar',\n                normalizedBar: 'pivotNormalizedBar',\n            },\n            pieGroup: {\n                _key: 'pivotPieChart',\n                pie: 'pivotPie',\n                doughnut: 'pivotDoughnut',\n            },\n            lineGroup: {\n                _key: 'pivotLineChart',\n                line: 'pivotLineChart',\n            },\n            scatterGroup: {\n                _key: 'pivotXYChart',\n                bubble: 'pivotBubble',\n                scatter: 'pivotScatter',\n            },\n            areaGroup: {\n                _key: 'pivotAreaChart',\n                area: 'pivotArea',\n                stackedArea: 'pivotStackedArea',\n                normalizedArea: 'pivotNormalizedArea',\n            },\n            histogramGroup: {\n                _key: 'pivotHistogramChart',\n                histogram: 'pivotHistogramChart',\n            },\n            combinationGroup: {\n                _key: 'pivotCombinationChart',\n                columnLineCombo: 'pivotColumnLineCombo',\n                areaColumnCombo: 'pivotAreaColumnCombo',\n                customCombo: '' // Not currently supported but needs a value to separate from a missing value\n            }\n        };\n    }\n}\nclass RangeMenuItemMapper {\n    constructor(gridOptionsService, chartService, localeService) {\n        this.gridOptionsService = gridOptionsService;\n        this.chartService = chartService;\n        this.localeService = localeService;\n    }\n    getMenuItem() {\n        const localeTextFunc = this.localeService.getLocaleTextFunc();\n        const getMenuItem = (localeKey, defaultText, chartType, key) => {\n            return {\n                name: localeTextFunc(localeKey, defaultText),\n                action: () => this.chartService.createChartFromCurrentRange(chartType),\n                _key: key\n            };\n        };\n        return {\n            name: localeTextFunc('chartRange', 'Chart Range'),\n            _key: 'chartRange',\n            subMenu: [\n                {\n                    name: localeTextFunc('columnChart', 'Column'),\n                    subMenu: [\n                        getMenuItem('groupedColumn', 'Grouped&lrm;', 'groupedColumn', 'rangeGroupedColumn'),\n                        getMenuItem('stackedColumn', 'Stacked&lrm;', 'stackedColumn', 'rangeStackedColumn'),\n                        getMenuItem('normalizedColumn', '100% Stacked&lrm;', 'normalizedColumn', 'rangeNormalizedColumn')\n                    ],\n                    _key: 'rangeColumnChart'\n                },\n                {\n                    name: localeTextFunc('barChart', 'Bar'),\n                    subMenu: [\n                        getMenuItem('groupedBar', 'Grouped&lrm;', 'groupedBar', 'rangeGroupedBar'),\n                        getMenuItem('stackedBar', 'Stacked&lrm;', 'stackedBar', 'rangeStackedBar'),\n                        getMenuItem('normalizedBar', '100% Stacked&lrm;', 'normalizedBar', 'rangeNormalizedBar')\n                    ],\n                    _key: 'rangeBarChart'\n                },\n                {\n                    name: localeTextFunc('pieChart', 'Pie'),\n                    subMenu: [\n                        getMenuItem('pie', 'Pie&lrm;', 'pie', 'rangePie'),\n                        getMenuItem('doughnut', 'Doughnut&lrm;', 'doughnut', 'rangeDoughnut')\n                    ],\n                    _key: 'rangePieChart'\n                },\n                getMenuItem('line', 'Line&lrm;', 'line', 'rangeLineChart'),\n                {\n                    name: localeTextFunc('xyChart', 'X Y (Scatter)'),\n                    subMenu: [\n                        getMenuItem('scatter', 'Scatter&lrm;', 'scatter', 'rangeScatter'),\n                        getMenuItem('bubble', 'Bubble&lrm;', 'bubble', 'rangeBubble')\n                    ],\n                    _key: 'rangeXYChart'\n                },\n                {\n                    name: localeTextFunc('areaChart', 'Area'),\n                    subMenu: [\n                        getMenuItem('area', 'Area&lrm;', 'area', 'rangeArea'),\n                        getMenuItem('stackedArea', 'Stacked&lrm;', 'stackedArea', 'rangeStackedArea'),\n                        getMenuItem('normalizedArea', '100% Stacked&lrm;', 'normalizedArea', 'rangeNormalizedArea')\n                    ],\n                    _key: 'rangeAreaChart'\n                },\n                getMenuItem('histogramChart', 'Histogram&lrm;', 'histogram', 'rangeHistogramChart'),\n                {\n                    name: localeTextFunc('combinationChart', 'Combination'),\n                    subMenu: [\n                        getMenuItem('columnLineCombo', 'Column & Line&lrm;', 'columnLineCombo', 'rangeColumnLineCombo'),\n                        getMenuItem('AreaColumnCombo', 'Area & Column&lrm;', 'areaColumnCombo', 'rangeAreaColumnCombo')\n                    ],\n                    _key: 'rangeCombinationChart'\n                }\n            ],\n            icon: _.createIconNoSpan('chart', this.gridOptionsService, undefined),\n        };\n    }\n    getConfigLookup() {\n        return {\n            columnGroup: {\n                _key: 'rangeColumnChart',\n                column: 'rangeGroupedColumn',\n                stackedColumn: 'rangeStackedColumn',\n                normalizedColumn: 'rangeNormalizedColumn',\n            },\n            barGroup: {\n                _key: 'rangeBarChart',\n                bar: 'rangeGroupedBar',\n                stackedBar: 'rangeStackedBar',\n                normalizedBar: 'rangeNormalizedBar',\n            },\n            pieGroup: {\n                _key: 'rangePieChart',\n                pie: 'rangePie',\n                doughnut: 'rangeDoughnut',\n            },\n            lineGroup: {\n                _key: 'rangeLineChart',\n                line: 'rangeLineChart',\n            },\n            scatterGroup: {\n                _key: 'rangeXYChart',\n                bubble: 'rangeBubble',\n                scatter: 'rangeScatter',\n            },\n            areaGroup: {\n                _key: 'rangeAreaChart',\n                area: 'rangeArea',\n                stackedArea: 'rangeStackedArea',\n                normalizedArea: 'rangeNormalizedArea',\n            },\n            histogramGroup: {\n                _key: 'rangeHistogramChart',\n                histogram: 'rangeHistogramChart',\n            },\n            combinationGroup: {\n                _key: 'rangeCombinationChart',\n                columnLineCombo: 'rangeColumnLineCombo',\n                areaColumnCombo: 'rangeAreaColumnCombo',\n                customCombo: '' // Not currently supported but needs a value to separate from a missing value\n            }\n        };\n    }\n}\n", "import { ModuleNames } from \"@ag-grid-community/core\";\nimport { EnterpriseCoreModule } from \"@ag-grid-enterprise/core\";\nimport { EnterpriseMenuFactory } from \"./menu/enterpriseMenu.mjs\";\nimport { ContextMenuFactory } from \"./menu/contextMenu.mjs\";\nimport { MenuItemMapper } from \"./menu/menuItemMapper.mjs\";\nimport { VERSION } from \"./version.mjs\";\nimport { ChartMenuItemMapper } from \"./menu/chartMenuItemMapper.mjs\";\nexport const MenuModule = {\n    version: VERSION,\n    moduleName: ModuleNames.MenuModule,\n    beans: [EnterpriseMenuFactory, ContextMenuFactory, MenuItemMapper, ChartMenuItemMapper],\n    dependantModules: [\n        EnterpriseCoreModule\n    ]\n};\n"],
  "mappings": "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",
  "names": ["EnterpriseMenuFactory", "_a", "__decorate", "ContextMenuFactory", "__decorate", "__decorate", "MenuItemMapper", "__decorate", "ChartMenuItemMapper", "_a"]
}
